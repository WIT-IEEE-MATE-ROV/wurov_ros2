#UPDATED 9/5/20

#!/usr/bin/env python

"""

 This file is part of Enbarr.

    Enbarr is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Enbarr is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Enbarr.  If not, see <https://www.gnu.org/licenses/>.

"""

import rclpy
from rclpy.node import Node

import numpy as np
from auv.msg import Ninedof


class SimulateNineDof(Node):

    def __init__(self):
        super().__init__('simulate_nineDof')
        self.publisher_ = self.create_publisher(Ninedof, 'ninedof_values', 10)
        timer_period = 0.5  # seconds
        self.timer = self.create_timer(timer_period, self.timer_callback)
        self.i = 0

    def timer_callback(self):
        sendval_ninedof = Ninedof()

        sendval_ninedof.orientation.roll   = np.random.normal()
        sendval_ninedof.orientation.pitch  = np.random.normal()
        sendval_ninedof.orientation.yaw    = np.random.normal()
        sendval_ninedof.translation.x      = np.random.normal()
        sendval_ninedof.translation.y      = np.random.normal()
        sendval_ninedof.translation.z      = np.random.normal()
            
        self.publisher_.publish(sendval_ninedof)
        self.get_logger().info('Publishing: "%s"' % sendval_ninedof)
        self.i += 1


def main(args=None):
    rclpy.init(args=args)

    simulate_nineDof = SimulateNineDof()

    rclpy.spin(simulate_nineDof)

    # Destroy the node explicitly
    # (optional - otherwise it will be done automatically
    # when the garbage collector destroys the node object)
    simulate_nineDof.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()
